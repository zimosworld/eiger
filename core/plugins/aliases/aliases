#!/bin/bash

# Configs (Prefix with Plugin name)

# Plugin configs
ALIASES_PLUGIN_COMMAND="aliases"
ALIASES_PLUGIN_HELP_COMMAND="aliases"
ALIASES_PLUGIN_HELP_TEXT="Manage aliases for eiger plugins allowing you to run them without eiger in prefixed."
ALIASES_PLUGIN_FUNCTION="aliasEntryPoint"
ALIASES_PLUGIN_HELP="aliasHelp"

function aliasEntryPoint {

  echo "Please select an option: "
  PS3="Please enter your choice: "
  options=("Enable All" "Disable All" "Toggle" "Quit")

  select opt in "${options[@]}"
  do
    case $opt in
      "Enable All")
        enableAll
        break
        ;;
      "Disable All")
        disableAll
        break
        ;;
      "Toggle")
        listAliases
        break
        ;;
      "Quit")
        break
        ;;
      *)
        echo "invalid option"
        ;;
    esac
  done
}

# Enable aliases for all plugin commands
function enableAll {

  for PLUGIN in "${PLUGINS[@]}"
  do
    if [[ "$(eval echo "$"${PLUGIN}_PLUGIN_ALLOW_ALIAS)" == "true" ]] && [[ ! -z $(eval echo "$"${PLUGIN}_PLUGIN_HELP_COMMAND) ]]; then
      local COMMAND=$(eval echo "$"${PLUGIN}_PLUGIN_HELP_COMMAND)

      aliasesMake $COMMAND
    fi
  done

  echo "All aliases added"
}

# Disable aliases for all plugin commands
function disableAll {
  #Clear out eiger aliases file
  local ACTIVE_ALIASES=($(find $ALIASPATH -maxdepth 1 -mindepth 1 -type f | sed "s|${ALIASPATH}/||g" | sort -n))

  for ALIAS in "${ACTIVE_ALIASES[@]}"
  do
    if [[ "$ALIAS" == "eiger" ]]; then
        continue
    fi

    aliasesRemove $ALIAS
  done
  echo "All aliases removed"
}

# Prompt for showing toggle aliases
function listAliases {

  local ACTIVE_ALIASES=($(find $ALIASPATH -maxdepth 1 -mindepth 1 -type f | sed "s|${ALIASPATH}/||g" | sort -n))

  OPTIONS=
  for PLUGIN in "${PLUGINS[@]}"
  do
    if [[ "$(eval echo "$"${PLUGIN}_PLUGIN_ALLOW_ALIAS)" == "true" ]] && [[ ! -z $(eval echo "$"${PLUGIN}_PLUGIN_HELP_COMMAND) ]]; then
      local COMMAND=$(eval echo "$"${PLUGIN}_PLUGIN_HELP_COMMAND)

      if [[ "${ACTIVE_ALIASES[*]}" == *"${COMMAND}"* ]]; then
        OPTIONS+="$COMMAND - Active,"
      else
        OPTIONS+="$COMMAND - Not Active,"
      fi

    fi
  done

  IFS=,
  echo "Please select an alias to enable/disable: "
  PS3="Please enter your choice: "
  options=(${OPTIONS} "Quit")

  select opt in "${options[@]}"
  do
    case $opt in
      "Quit")
        break
        ;;
      *)
        toggleAliases $opt
        break
        ;;
    esac
  done
}

# Logic to toggle alias on/off
function toggleAliases {

  IFS=' '
  local SELECTED=$1
  local ALIAS=$(echo "$SELECTED" | grep -o '.* -' | sed 's/ -//g')
  local ACTIVE_ALIASES=$(find $ALIASPATH -maxdepth 1 -mindepth 1 -type f | sed "s|${ALIASPATH}/||g" | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/ /g' | sort -n)

  if [[ "${SELECTED}" == *"- Not Active" ]]; then
    aliasesMake $ALIAS
  else
    aliasesRemove $ALIAS
  fi

  listAliases
}

function aliasesMake {

    local alias=$1
    local scriptPath="$ALIASPATH/$alias"

    echo "eiger $alias \$@" > $scriptPath
    chmod 740 $scriptPath
}

function aliasesRemove {

    local alias=$1
    local scriptPath="$ALIASPATH/$alias"

    rm $scriptPath
}