#!/bin/bash

# Configs (Prefix with Plugin name)

# Plugin configs
DOCKER_PLUGIN_COMMAND="docker"
DOCKER_PLUGIN_ALLOW_ALIAS="false"
DOCKER_PLUGIN_HELP_COMMAND="docker"
DOCKER_PLUGIN_HELP_TEXT="Custom docker shortcuts."
DOCKER_PLUGIN_FUNCTION="dockerEntryPoint"
DOCKER_PLUGIN_HELP="dockerHelp"

DOCKER_TEMPLATE_PATH=./

source $PLUGINPATH/docker/docker-setup

function dockerEntryPoint {

  case $2 in
    login)
      dockerExecuteCommand "bash" "to login to" $3
      ;;
    exec)
      dockerExec $@
      ;;
    start)
      dockerChangeContainerStatus start $3
      ;;
    stop)
      dockerChangeContainerStatus stop $3
      ;;
    down)
      dockerChangeContainerStatus down $3
      ;;
    setup)
      dockerSetupContainer
      ;;
    help|--help|-h)
      dockerPluginHelp
      ;;
	esac
}

# Check if container name was passed in with command and run execute function
function dockerExec {

  if [ ! -z $(docker ps | grep -w $3 | awk '{print $1}') ]; then
    dockerExecuteCommand "${*:4}" "run a command in" $3
    return
  fi

  dockerExecuteCommand "${*:3}" "run a command in"
}

# Execute command in docker container
function dockerExecuteCommand {

  if [ ! -z $3 ]; then
    $COMMAND_PREFIX docker exec -it $3 $1
    return
  fi

  if [ ! -f "$(pwd)/docker-compose.yml" ] && [ ! -f "$(pwd)/docker-compose.yaml" ]; then
    message "ERROR" "No docker-compose file found. Please run where the docker-compose file lives or pass in a container name."
  fi

  DOCKER_CONTAINERS=$(grep 'container_name:' "$(pwd)/docker-compose.yml" | awk '{ print $2 }');
  DOCKER_CONTAINERS_COUNT=($DOCKER_CONTAINERS)

  if [ "${#DOCKER_CONTAINERS_COUNT[*]}" = 1 ]; then
    $COMMAND_PREFIX docker exec -it $DOCKER_CONTAINERS $1
  else
    echo "More than one container was detected, containers found: "
    PS3="Please enter the number selection of the container you would like $2:"
    select opt in $DOCKER_CONTAINERS; do
      if [ -z $opt ]; then
        message "ERROR" "Invalid selection"
      fi
      $COMMAND_PREFIX docker exec -it $opt $1
      exit
    done
  fi
}

# Change container status either by name or auto detect based on docker-compose.yml file
function dockerChangeContainerStatus {

  local DOCKER_CMD=""
  local DOCKER_COMPOSE_CMD=""

  case $1 in
    start)
      DOCKER_CMD="start"
      DOCKER_COMPOSE_CMD="up -d"
    ;;
    stop)
      DOCKER_CMD="stop"
      DOCKER_COMPOSE_CMD="stop"
    ;;
    down)
      DOCKER_CMD="rm -f"
      DOCKER_COMPOSE_CMD="down"
    ;;
  esac

  # Check if container name was passed in
  if [ ! -z $2 ]; then
    # Start docker container by name
    $COMMAND_PREFIX docker $DOCKER_CMD $2
    return
  fi

  # Check if current directory has docker-compose.yml file
  if [ ! -f "$(pwd)/docker-compose.yml" ] && [ ! -f "$(pwd)/docker-compose.yaml" ]; then
	message "ERROR" "No docker-compose file found. Please run where the docker-compose file lives or pass in a container name."
  fi

  # Run docker-compose start command
  $COMMAND_PREFIX docker-compose $DOCKER_COMPOSE_CMD
}

# Plugin help function
function dockerPluginHelp {
  printf "\nUsage: eiger docker [COMMAND]\n\nRun docker commands.\n\n"

  printf "Commands:\n\n"
  printf "  start\t\tStart docker container.\n"
  printf "  stop\t\tStop docker container.\n"
  printf "  down\t\tStop and remove docker container.\n"
  printf "  login\t\tLogin to docker container.\n"
  printf "  exec\t\tExecute command in docker container.\n"
  printf "  setup\t\tSetup config for new docker container.\n"
}