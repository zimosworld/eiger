#!/bin/bash

# Configs (Prefix with Plugin name)

# Plugin configs
COMPOSER_PLUGIN_COMMAND="composer"
COMPOSER_PLUGIN_ALLOW_ALIAS="true"
COMPOSER_PLUGIN_HELP_COMMAND="composer"
COMPOSER_PLUGIN_HELP_TEXT="A application-level package manager for the PHP."
COMPOSER_PLUGIN_FUNCTION="composerRun"
COMPOSER_PLUGIN_HELP="composerHelp"
COMPOSER_PLUGIN_INIT="composerInit"

# Default configs
COMPOSER_ENABLED=true
COMPOSER_PATH=/
COMPOSER_VERSION=latest
COMPOSER_IPR=false

# Run Composer command inside docker container
function composerRun {

	if ! [ COMPOSER_ENABLED ]; then
		message "ERROR" "Composer is disabled on this project."
	fi
	
	local COMPOSER_FULL_PATH=$(pwd)$COMPOSER_PATH
	local COMPOSER_IPR_VALUE=""

	if [ $COMPOSER_IPR = true ]; then
	  COMPOSER_IPR_VALUE="--ignore-platform-reqs"
	fi

	$COMMAND_PREFIX docker run --rm --interactive --tty --user $USER:$GROUP --volume $PATH_PREFIX$COMPOSER_FULL_PATH:/app --volume $PATH_PREFIX$SSHKEYPATH:/home/$USER/.ssh composer:$COMPOSER_VERSION $@ $COMPOSER_IPR_VALUE
	debug "Finished running composer"
}

# Init - Eiger project config setup (Creates a .eiger config file for project)
function composerInit {
	local INIT_COMPOSER_ENABLED=false
	local INIT_COMPOSER_PATH=
	local INIT_COMPOSER_VERSION=
	
	if ask "Enabled Composer?" N; then
		INIT_COMPOSER_ENABLED=true
		
		read -p "Relative path to composer.json file? [/]): " UI_COMPOSER_PATH
		INIT_COMPOSER_PATH=${UI_COMPOSER_PATH:-/}
		
		read -p "Which version of Composer would you like to use? See https://hub.docker.com/_/composer/ for available versions. (Default: latest): " UI_COMPOSER_VERSION
		INIT_COMPOSER_VERSION=${UI_COMPOSER_VERSION:-latest}
	fi
	
	INIT_NODE_ENABLED=false
	INIT_NODE_PATH=
	INIT_NODE_VERSION=
	
	echo "COMPOSER_ENABLED=$INIT_COMPOSER_ENABLED
COMPOSER_PATH=$INIT_COMPOSER_PATH
COMPOSER_VERSION=$INIT_COMPOSER_VERSION"
}